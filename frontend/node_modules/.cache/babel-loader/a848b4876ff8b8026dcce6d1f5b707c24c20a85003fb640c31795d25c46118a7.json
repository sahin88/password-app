{"ast":null,"code":"var _jsxFileName = \"/Users/sahinogur/Desktop/fast_api/frontend/password_app/src/components/Notes.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport { Container, Row, Col, Form } from 'react-bootstrap';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\nimport { DndProvider } from 're';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialNotes = [{\n  id: 'note-1',\n  content: 'Note 1'\n}, {\n  id: 'note-2',\n  content: 'Note 2'\n}, {\n  id: 'note-3',\n  content: 'Note 3'\n}];\nfunction Notes() {\n  _s();\n  const [notes, setNotes] = useState(initialNotes);\n  const [newNote, setNewNote] = useState('');\n  const handleNoteChange = e => {\n    setNewNote(e.target.value);\n  };\n  const addNote = () => {\n    if (newNote.trim() !== '') {\n      const newNoteObj = {\n        id: `note-${notes.length + 1}`,\n        content: newNote\n      };\n      setNotes([...notes, newNoteObj]);\n      setNewNote('');\n    }\n  };\n  const onDragEnd = result => {\n    if (!result.destination) return; // dropped outside the list\n\n    const reorderedNotes = Array.from(notes);\n    const [reorderedNote] = reorderedNotes.splice(result.source.index, 1);\n    reorderedNotes.splice(result.destination.index, 0, reorderedNote);\n    setNotes(reorderedNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Notes App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Add a new note\",\n              value: newNote,\n              onChange: handleNoteChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-primary\",\n            onClick: addNote,\n            children: \"Add Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"notes\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group mt-3\",\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: [notes.map((note, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: note.id,\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item\",\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: note.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 23\n              }, this)\n            }, note.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Notes, \"LmxL5vSgjXYMmSRagMimZfhpQ4Y=\");\n_c = Notes;\nexport default Notes;\nvar _c;\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"names":["React","useState","Container","Row","Col","Form","Draggable","Droppable","DndProvider","jsxDEV","_jsxDEV","initialNotes","id","content","Notes","_s","notes","setNotes","newNote","setNewNote","handleNoteChange","e","target","value","addNote","trim","newNoteObj","length","onDragEnd","result","destination","reorderedNotes","Array","from","reorderedNote","splice","source","index","className","children","md","fileName","_jsxFileName","lineNumber","columnNumber","Group","Control","type","placeholder","onChange","onClick","droppableId","provided","ref","innerRef","droppableProps","map","note","draggableId","draggableProps","dragHandleProps","_c","$RefreshReg$"],"sources":["/Users/sahinogur/Desktop/fast_api/frontend/password_app/src/components/Notes.js"],"sourcesContent":["import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport { Container, Row, Col, Form } from 'react-bootstrap';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\nimport {DndProvider} from 're'\n\nconst initialNotes = [\n  { id: 'note-1', content: 'Note 1' },\n  { id: 'note-2', content: 'Note 2' },\n  { id: 'note-3', content: 'Note 3' },\n];\n\nfunction Notes() {\n  const [notes, setNotes] = useState(initialNotes);\n  const [newNote, setNewNote] = useState('');\n\n  const handleNoteChange = (e) => {\n    setNewNote(e.target.value);\n  };\n\n  const addNote = () => {\n    if (newNote.trim() !== '') {\n      const newNoteObj = { id: `note-${notes.length + 1}`, content: newNote };\n      setNotes([...notes, newNoteObj]);\n      setNewNote('');\n    }\n  };\n\n  const onDragEnd = (result) => {\n    if (!result.destination) return; // dropped outside the list\n\n    const reorderedNotes = Array.from(notes);\n    const [reorderedNote] = reorderedNotes.splice(result.source.index, 1);\n    reorderedNotes.splice(result.destination.index, 0, reorderedNote);\n\n    setNotes(reorderedNotes);\n  };\n\n  return (\n    <Container className=\"mt-5\">\n      <Row>\n        <Col md={6}>\n          <h1>Notes App</h1>\n          <Form>\n            <Form.Group>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Add a new note\"\n                value={newNote}\n                onChange={handleNoteChange}\n              />\n            </Form.Group>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={addNote}\n            >\n              Add Note\n            </button>\n          </Form>\n          <Droppable droppableId=\"notes\">\n            {(provided) => (\n              <ul\n                className=\"list-group mt-3\"\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n              >\n                {notes.map((note, index) => (\n                  <Draggable\n                    key={note.id}\n                    draggableId={note.id}\n                    index={index}\n                  >\n                    {(provided) => (\n                      <li\n                        className=\"list-group-item\"\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        {note.content}\n                      </li>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </ul>\n            )}\n          </Droppable>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Notes;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}